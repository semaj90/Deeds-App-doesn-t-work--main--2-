# Memory-optimized PostgreSQL + pgvector + Qdrant setup
# Designed for efficient vector search with controlled resource usage

services:
  # PostgreSQL with pgvector extension
  postgres:
    image: ankane/pgvector:v0.5.1
    container_name: prosecutor_postgres
    environment:
      POSTGRES_DB: prosecutor_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      # Memory optimization settings
      POSTGRES_SHARED_BUFFERS: 256MB
      POSTGRES_EFFECTIVE_CACHE_SIZE: 512MB
      POSTGRES_WORK_MEM: 16MB
      POSTGRES_MAINTENANCE_WORK_MEM: 64MB
      POSTGRES_MAX_CONNECTIONS: 100
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-pgvector.sql:/docker-entrypoint-initdb.d/init-pgvector.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d prosecutor_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 768M
          cpus: '1.0'
        reservations:
          memory: 512M

  # Qdrant for advanced vector search
  qdrant:
    image: qdrant/qdrant:v1.7.4
    container_name: prosecutor_qdrant
    environment:
      # Memory optimization for Qdrant
      QDRANT__SERVICE__MAX_REQUEST_SIZE_MB: 32
      QDRANT__STORAGE__OPTIMIZERS__INDEXING_THRESHOLD: 20000
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
      - ./config/qdrant-config.yaml:/qdrant/config/production.yaml
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:6333/healthz"]
      interval: 15s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.75'
        reservations:
          memory: 256M

  # Redis for caching (optional but recommended for performance)
  redis:
    image: redis:7-alpine
    container_name: prosecutor_redis
    command: redis-server --maxmemory 128mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'

volumes:
  postgres_data:
  qdrant_data:
  redis_data:
